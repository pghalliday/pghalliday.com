{"componentChunkName":"component---src-templates-blog-post-js","path":"/submitting-mocha-bdd-test-results-to-sonar/","result":{"data":{"site":{"siteMetadata":{"title":"Peter Halliday","siteUrl":"https://pghalliday.com/portfolio"}},"markdownRemark":{"id":"ff56d46c-84cb-5669-ac4a-cd1442fa364a","excerpt":"I like to use Mocha with the BDD test UI to write my tests and in the office at least, use Sonar to collect test and coverage data as well as perform staticâ€¦","html":"<p>I like to use <a href=\"http://visionmedia.github.io/mocha/\">Mocha</a> with the BDD test UI to write my tests and in the office at least, use <a href=\"http://www.sonarqube.org/\">Sonar</a> to collect test and coverage data as well as perform static analysis on source code. For Javascript projects this means using the <a href=\"http://docs.codehaus.org/display/SONAR/JavaScript+Plugin\">Sonar javascript plugin</a>.</p>\n<p>A typical <code class=\"language-text\">sonar-project.properties</code> configuration file will look like this.</p>\n<div class=\"gatsby-highlight\" data-language=\"properties\"><pre class=\"language-properties\"><code class=\"language-properties\"><span class=\"token attr-name\">sonar.projectKey</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">app:my-app</span>\n<span class=\"token attr-name\">sonar.projectName</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">My Application</span>\n<span class=\"token attr-name\">sonar.projectVersion</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">1.0</span>\n\n<span class=\"token attr-name\">sonar.sources</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">lib/src</span>\n<span class=\"token attr-name\">sonar.language</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">js</span>\n\n<span class=\"token attr-name\">sonar.javascript.jstestdriver.reportsPath</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">reports</span>\n<span class=\"token attr-name\">sonar.javascript.lcov.reportPath</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">reports/lcov.info</span></code></pre></div>\n<p>This tells Sonar that my test results will be in the <code class=\"language-text\">reports</code> directory and that coverage data will be located at <code class=\"language-text\">reports/lcov.info</code></p>\n<p>The Sonar javascript plugin supports coverage data in the <code class=\"language-text\">lcov</code> format and test reports in the <code class=\"language-text\">xunit</code> format.</p>\n<p>For my NodeJS projects I use my <a href=\"https://github.com/pghalliday/grunt-mocha-test\"><code class=\"language-text\">grunt-mocha-test</code></a> plugin to generate the reports. In this case we can use the <a href=\"https://github.com/StevenLooman/mocha-lcov-reporter\"><code class=\"language-text\">mocha-lcov-reporter</code></a> to generate the coverage report. However when using the standard <code class=\"language-text\">xunit</code> reporter to generate the test report 2 problems become apparent when the reports are submitted to Sonar.</p>\n<ul>\n<li>Sonar will reject reports that have a <code class=\"language-text\">classname</code> that mirrors a source file, eg. if you have a source file called <code class=\"language-text\">MyClass.js</code> then you cannot have a test with a <code class=\"language-text\">classname</code> of <code class=\"language-text\">MyClass</code> (the standard <code class=\"language-text\">xunit</code> reporter uses the contents of the <code class=\"language-text\">Describe</code> text as the classname, so for me this happens a lot!)</li>\n<li>Sonar interprets the <code class=\"language-text\">classname</code> field as a filename resulting in hard to read test reports in the Sonar UI (this is probably also the cause of the first issue)</li>\n</ul>\n<p>The solution for me was to create a new reporter for Mocha based on the <code class=\"language-text\">xunit</code> reporter.</p>\n<p><a href=\"https://github.com/pghalliday/mocha-sonar-reporter\"><code class=\"language-text\">mocha-sonar-reporter</code></a> will generate <code class=\"language-text\">xunit</code> output that uses the concatenation of the suite and test titles as the test <code class=\"language-text\">name</code> and set the <code class=\"language-text\">classname</code> to a configurable constant so that name collisions can be avoided. If no <code class=\"language-text\">classname</code> is configured it will default to <code class=\"language-text\">Test</code>.</p>","frontmatter":{"disqus_identifier":"submitting-mocha-bdd-test-results-to-sonar","title":"Submitting Mocha BDD test results to Sonar","date":"February 11, 2014","description":null},"fields":{"slug":"/submitting-mocha-bdd-test-results-to-sonar/"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/submitting-mocha-bdd-test-results-to-sonar/","previous":{"fields":{"slug":"/first-post/"},"frontmatter":{"title":"First Post!"}},"next":{"fields":{"slug":"/nodejs--getting-test-coverage-from-child-processes/"},"frontmatter":{"title":"NodeJS - Getting test coverage from child processes"}}}}}