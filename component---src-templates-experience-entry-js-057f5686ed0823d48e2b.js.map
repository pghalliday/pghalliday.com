{"version":3,"sources":["webpack:///./src/templates/experience-entry.js"],"names":["ExperienceEntryTemplate","render","post","this","props","data","markdownRemark","siteTitle","site","siteMetadata","title","pageContext","previous","next","endDate","frontmatter","end_date","location","description","excerpt","style","marginTop","rhythm","marginBottom","company","scale","display","start_date","dangerouslySetInnerHTML","__html","html","flexWrap","justifyContent","listStyle","padding","to","fields","slug","rel","React","Component","pageQuery"],"mappings":"iPAOMA,E,gLACJC,OAAA,WACE,IAAMC,EAAOC,KAAKC,MAAMC,KAAKC,eACvBC,EAAYJ,KAAKC,MAAMC,KAAKG,KAAKC,aAAaC,MAF7C,EAGoBP,KAAKC,MAAMO,YAA9BC,EAHD,EAGCA,SAAUC,EAHX,EAGWA,KACZC,EAAUZ,EAAKa,YAAYC,UAAjB,UAEhB,OACE,YAAC,IAAD,CAAQC,SAAUd,KAAKC,MAAMa,SAAUP,MAAOH,GAC5C,YAAC,IAAD,CACEG,MAAOR,EAAKa,YAAYL,MACxBQ,YAAahB,EAAKa,YAAYG,aAAehB,EAAKiB,UAEpD,2BACE,0BACE,kBACEC,MAAO,CACLC,UAAWC,YAAO,GAClBC,aAAcD,YAAO,MAGtBpB,EAAKa,YAAYL,OAEpB,kBACEU,MAAO,CACLC,UAAW,EACXE,aAAcD,YAAO,MAGtBpB,EAAKa,YAAYS,SAEpB,iBACEJ,MAAK,iBACAK,aAAM,IADN,CAEHC,QAAQ,QACRH,aAAcD,YAAO,MAGtBpB,EAAKa,YAAYY,WAPpB,OAOoCb,IAGtC,uBAASc,wBAAyB,CAAEC,OAAQ3B,EAAK4B,QACjD,kBACEV,MAAO,CACLG,aAAcD,YAAO,OAK3B,uBACE,kBACEF,MAAO,CACLM,QAAQ,OACRK,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,sBACGtB,GACC,YAAC,OAAD,CAAMuB,GAAIvB,EAASwB,OAAOC,KAAMC,IAAI,QAApC,KACK1B,EAASG,YAAYL,QAI9B,sBACGG,GACC,YAAC,OAAD,CAAMsB,GAAItB,EAAKuB,OAAOC,KAAMC,IAAI,QAC7BzB,EAAKE,YAAYL,MADpB,W,GApEsB6B,IAAMC,WAgF7BxC,YAER,IAAMyC,EAAS","file":"component---src-templates-experience-entry-js-057f5686ed0823d48e2b.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm, scale } from \"../utils/typography\"\n\nclass ExperienceEntryTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const { previous, next } = this.props.pageContext\n    const endDate = post.frontmatter.end_date || `Present`\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title={post.frontmatter.title}\n          description={post.frontmatter.description || post.excerpt}\n        />\n        <article>\n          <header>\n            <h1\n              style={{\n                marginTop: rhythm(1),\n                marginBottom: rhythm(1 / 2),\n              }}\n            >\n              {post.frontmatter.title}\n            </h1>\n            <h3\n              style={{\n                marginTop: 0,\n                marginBottom: rhythm(1 / 2),\n              }}\n            >\n              {post.frontmatter.company}\n            </h3>\n            <p\n              style={{\n                ...scale(-1 / 5),\n                display: `block`,\n                marginBottom: rhythm(1),\n              }}\n            >\n              {post.frontmatter.start_date} to {endDate}\n            </p>\n          </header>\n          <section dangerouslySetInnerHTML={{ __html: post.html }} />\n          <hr\n            style={{\n              marginBottom: rhythm(1),\n            }}\n          />\n        </article>\n\n        <nav>\n          <ul\n            style={{\n              display: `flex`,\n              flexWrap: `wrap`,\n              justifyContent: `space-between`,\n              listStyle: `none`,\n              padding: 0,\n            }}\n          >\n            <li>\n              {previous && (\n                <Link to={previous.fields.slug} rel=\"prev\">\n                  ← {previous.frontmatter.title}\n                </Link>\n              )}\n            </li>\n            <li>\n              {next && (\n                <Link to={next.fields.slug} rel=\"next\">\n                  {next.frontmatter.title} →\n                </Link>\n              )}\n            </li>\n          </ul>\n        </nav>\n      </Layout>\n    )\n  }\n}\n\nexport default ExperienceEntryTemplate\n\nexport const pageQuery = graphql`\n  query ExperienceEntryBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        siteUrl\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        company\n        start_date(formatString: \"MMMM, YYYY\")\n        end_date(formatString: \"MMMM, YYYY\")\n        description\n      }\n      fields {\n        slug\n      }\n    }\n  }\n`\n"],"sourceRoot":""}