{"version":3,"sources":["webpack:///./src/pages/experience.js"],"names":["ExperienceIndex","render","data","this","props","siteTitle","site","siteMetadata","title","entries","edges","location","map","node","frontmatter","fields","slug","endDate","end_date","key","style","marginBottom","rhythm","boxShadow","to","marginTop","company","start_date","dangerouslySetInnerHTML","__html","description","excerpt","React","Component","pageQuery"],"mappings":"mQAOMA,E,gLACJC,OAAA,WAAU,IACAC,EAASC,KAAKC,MAAdF,KACFG,EAAYH,EAAKI,KAAKC,aAAaC,MACnCC,EAAUP,EAAKO,QAAQC,MAE7B,OACE,YAAC,IAAD,CAAQC,SAAUR,KAAKC,MAAMO,SAAUH,MAAOH,GAC5C,YAAC,IAAD,CAAKG,MAAM,cACVC,EAAQG,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACRL,EAAQK,EAAKC,YAAYN,OAASK,EAAKE,OAAOC,KAC9CC,EAAUJ,EAAKC,YAAYI,UAAjB,UAChB,OACE,uBAASC,IAAKN,EAAKE,OAAOC,MACxB,0BACE,kBACEI,MAAO,CACLC,aAAcC,YAAO,MAGvB,YAAC,OAAD,CAAMF,MAAO,CAAEG,UAAU,QAAWC,GAAIX,EAAKE,OAAOC,MACjDR,IAGL,kBACEY,MAAO,CACLK,UAAW,EACXJ,aAAcC,YAAO,OAGtBT,EAAKC,YAAYY,SAEpB,yBAAQb,EAAKC,YAAYa,YACzB,iCACA,yBAAQV,IAEV,2BACE,iBACEW,wBAAyB,CACvBC,OAAQhB,EAAKC,YAAYgB,aAAejB,EAAKkB,kB,GAvCnCC,IAAMC,WAmDrBjC,YAER,IAAMkC,EAAS","file":"component---src-pages-experience-js-146281d477300b51c825.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\n\nclass ExperienceIndex extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const entries = data.entries.edges\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"All posts\" />\n        {entries.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          const endDate = node.frontmatter.end_date || `Present`\n          return (\n            <article key={node.fields.slug}>\n              <header>\n                <h3\n                  style={{\n                    marginBottom: rhythm(1 / 2),\n                  }}\n                >\n                  <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                    {title}\n                  </Link>\n                </h3>\n                <h4\n                  style={{\n                    marginTop: 0,\n                    marginBottom: rhythm(1 / 4),\n                  }}\n                >\n                  {node.frontmatter.company}\n                </h4>\n                <small>{node.frontmatter.start_date}</small>\n                <small>{` to `}</small>\n                <small>{endDate}</small>\n              </header>\n              <section>\n                <p\n                  dangerouslySetInnerHTML={{\n                    __html: node.frontmatter.description || node.excerpt,\n                  }}\n                />\n              </section>\n            </article>\n          )\n        })}\n      </Layout>\n    )\n  }\n}\n\nexport default ExperienceIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    entries: allMarkdownRemark(\n      sort: { fields: [fields___sortDate], order: DESC }\n      filter: { fields: { sourceInstanceName: { eq: \"experience\" } } }\n      limit: 1000\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            end_date(formatString: \"MMMM, YYYY\")\n            start_date(formatString: \"MMMM, YYYY\")\n            title\n            company\n            description\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}